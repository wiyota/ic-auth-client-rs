[package]
name = "ic-auth-client"
version = "0.4.1"
authors = ["Inomoto, Yota <yota@perforate.org>"]
license = "Apache-2.0"
edition = "2024"
rust-version = "1.85.0"

description = "A client library for Internet Computer identity authentication services."
include = ["/src", "/Cargo.toml", "/README.md", "/LICENSE"]

documentation = "https://docs.rs/ic-auth-client/"
repository = "https://github.com/wiyota/ic-auth-client-rs/"

readme = "README.md"

categories = ["api-bindings", "authentication", "wasm"]
keywords = ["icp", "internet-computer", "identity", "frontend"]

[lib]
crate-type = ["rlib", "cdylib"]

[dependencies]
base64 = "0.22"
bon = "3"
document-features = "0.2"
ed25519-dalek = { version = "2.2", features = ["rand_core"] }
futures = "0.3"
ic-agent = { version = "0.44", default-features = false }
parking_lot = "0.12"
rand = "0.8"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2"
tracing = { version = "0.1", optional = true }

# `wasm-js` feature
getrandom = { version = "0.3", optional = true }
gloo-events = { version = "0.2", optional = true }
gloo-timers = { version = "0.3", optional = true, features = ["futures"] }
gloo-utils = { version = "0.2", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
wasm-timer = { version = "0.2", optional = true }
web-sys = { version = "0.3", optional = true, default-features = false, features = [
    "MessageEvent",
    "Storage",
    "Url",
    "Window",
] }

# `native` feature
chrono = { version = "0.4", optional = true }
hex = { version = "0.4", optional = true }
keyring = { version = "3", optional = true, features = [
    "apple-native",
    "windows-native",
    "sync-secret-service",
] }
percent-encoding = { version = "2.3", optional = true }
portpicker = { version = "0.1", optional = true }
rdev = { version = "0.5", optional = true }
tiny_http = { version = "0.12", optional = true }
tokio = { version = "1.47", optional = true, features = [
    "macros",
    "rt-multi-thread",
    "time",
] }
url = { version = "2", optional = true }
webbrowser = { version = "1.0", optional = true }

[dev-dependencies]
serde_test = "1.0"
wasm-bindgen-test = "0.3"

[features]
default = ["wasm-js"]

#! # Features

# miniserde = []

## Enable native platform support
native = [
    "dep:chrono",
    "dep:hex",
    "dep:keyring",
    "dep:percent-encoding",
    "dep:portpicker",
    "dep:rdev",
    "dep:tiny_http",
    "dep:tokio",
    "dep:url",
    "dep:webbrowser",
]

## Enable tracing
tracing = ["dep:tracing"]

## Enable WebView support
wasm-js = [
    "dep:gloo-events",
    "dep:gloo-timers",
    "dep:gloo-utils",
    "dep:serde-wasm-bindgen",
    "dep:wasm-bindgen",
    "dep:wasm-bindgen-futures",
    "dep:wasm-timer",
    "dep:web-sys",
    "getrandom/wasm_js",
    "ic-agent/wasm-bindgen",
]

[profile.release]
opt-level = "z"
lto = true
codegen-units = 1
strip = true
panic = "abort"

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-O", "--enable-bulk-memory"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(coverage,coverage_nightly)',
] }
